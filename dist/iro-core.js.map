{"version":3,"file":"iro-core.js","sources":["../src/color.ts","../src/slider.ts","../src/input.ts","../src/wheel.ts","../src/box.ts","../src/util.ts","../src/css.ts","../src/colorPickerOptions.ts"],"sourcesContent":["// Some regular expressions for rgb() and hsl() Colors are borrowed from tinyColor\n// https://github.com/bgrins/TinyColor\n// Kelvin temperature math borrowed from Neil Barlett's implementation\n// from https://github.com/neilbartlett/color-temperature\n\n// https://www.w3.org/TR/css3-values/#integers\nconst CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// http://www.w3.org/TR/css3-values/#number-value\nconst CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number. Don't capture the either/or, just the entire outcome\nconst CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')';\n\n// Parse function params\n// Parens and commas are optional, and this also allows for whitespace between numbers\nconst PERMISSIVE_MATCH_3 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\nconst PERMISSIVE_MATCH_4 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\n\n// Regex patterns for functional color strings\nconst REGEX_FUNCTIONAL_RGB = new RegExp('rgb' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_RGBA = new RegExp('rgba' + PERMISSIVE_MATCH_4);\nconst REGEX_FUNCTIONAL_HSL = new RegExp('hsl' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_HSLA = new RegExp('hsla' + PERMISSIVE_MATCH_4);\n\n// Color string parsing regex\nconst HEX_START = '^(?:#?|0x?)';\nconst HEX_INT_SINGLE = '([0-9a-fA-F]{1})';\nconst HEX_INT_DOUBLE = '([0-9a-fA-F]{2})';\nconst REGEX_HEX_3 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_4 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_6 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\nconst REGEX_HEX_8 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\n\n// Kelvin temperature bounds\nconst KELVIN_MIN = 2000;\nconst KELVIN_MAX = 40000;\n\n// Math shorthands\nconst { log, round, floor } = Math;\n\n/**\n * @desc Clamp a number between a min and max value\n * @param num - input value\n * @param min - min allowed value\n * @param max - max allowed value\n */\nfunction clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max)\n}\n\n/**\n * @desc Parse a css unit string - either regular int or a percentage number\n * @param str - css unit string\n * @param max - max unit value, used for calculating percentages\n */\nfunction parseUnit(str: string, max: number): number {\n  const isPercentage = str.indexOf('%') > -1;\n  const num = parseFloat(str);\n  return isPercentage ? (max / 100) * num : num;\n}\n\n/**\n * @desc Parse hex str to an int\n * @param str - hex string to parse\n */\nfunction parseHexInt(str: string): number {\n  return parseInt(str, 16);\n}\n\n/**\n * @desc Convert nunber into to 2-digit hex\n * @param int - number to convert\n */\nfunction intToHex(int: number): string {\n  return int.toString(16).padStart(2, '0');\n}\n\nexport interface ColorChanges {\n  h: boolean;\n  s: boolean;\n  v: boolean;\n  a: boolean;\n}\n\n// all hsv color channels are optional by design\nexport interface HsvColor {\n  h?: number;\n  s?: number;\n  v?: number;\n  a?: number;\n}\n\nexport interface RgbColor {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\nexport interface HslColor {\n  h: number;\n  s: number;\n  l: number;\n  a?: number;\n}\n\nexport interface KelvinColor {\n  kelvin: number;\n  _kelvin: number;\n}\n\nexport type IroColorValue = IroColor | HsvColor | RgbColor | HslColor | KelvinColor | string;\n\nexport class IroColor {\n  // internal color value storage\n  private $: HsvColor;\n  private onChange: Function;\n  private initialValue: HsvColor;\n\n  public index: number;\n  public _kelvin: number;\n\n  /**\n    * @constructor Color object\n    * @param value - initial color value\n  */\n  constructor(value?: IroColorValue, onChange?: Function) {\n    // The default Color value\n    this.$ = {h: 0, s: 0, v: 0, a: 1};\n    if (value) this.set(value);\n    // The watch callback function for this Color will be stored here\n    this.onChange = onChange;\n    this.initialValue = { ...this.$ }; // copy initial value\n  }\n\n  /**\n    * @desc Set the Color from any valid value\n    * @param value - new color value\n  */\n  public set(value: IroColorValue) {\n    if (typeof value === 'string') {\n      if (/^(?:#?|0x?)[0-9a-fA-F]{3,8}$/.test(value as string)) {\n        this.hexString = value as string;\n      }\n      else if (/^rgba?/.test(value as string)) {\n        this.rgbString = value as string;\n      }\n      else if (/^hsla?/.test(value as string)) {\n        this.hslString = value as string;\n      }\n    }\n    else if (typeof value === 'object') {\n      if (value instanceof IroColor) {\n        this.hsva = value.hsva;\n      }\n      else if ('r' in value && 'g' in value && 'b' in value) {\n        this.rgb = value;\n      }\n      else if ('h' in value && 's' in value && 'v' in value) {\n        this.hsv = value;\n      }\n      else if ('h' in value && 's' in value && 'l' in value) {\n        this.hsl = value;\n      }\n      else if ('kelvin' in value) {\n        this.kelvin = value.kelvin;\n      }\n    }\n    else {\n      throw new Error('Invalid color value');\n    }\n  }\n\n  /**\n    * @desc Shortcut to set a specific channel value\n    * @param format - hsv | hsl | rgb\n    * @param channel - individual channel to set, for example if model = hsl, chanel = h | s | l\n    * @param value - new value for the channel\n  */\n  public setChannel(format: string, channel: string, value: number) {\n    this[format] = {...this[format], [channel]: value};\n  }\n\n  /**\n   * @desc Reset color back to its initial value\n   */\n  public reset() {\n    this.hsva = this.initialValue;\n  }\n\n  /**\n    * @desc make new Color instance with the same value as this one\n  */\n  public clone() {\n    return new IroColor(this);\n  }\n\n  /**\n   * @desc remove color onChange\n   */\n  public unbind() {\n    this.onChange = undefined;\n  }\n\n  /**\n    * @desc Convert hsv object to rgb\n    * @param hsv - hsv color object\n  */\n  public static hsvToRgb(hsv: HsvColor): RgbColor {\n    const h = hsv.h / 60;\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const i = floor(h);\n    const f = h - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n    const mod = i % 6;\n    const r = [v, q, p, p, t, v][mod];\n    const g = [t, v, v, q, p, p][mod];\n    const b = [p, p, t, v, v, q][mod];\n    return {\n      r: clamp(r * 255, 0, 255), \n      g: clamp(g * 255, 0, 255), \n      b: clamp(b * 255, 0, 255)\n    };\n  }\n\n  /**\n    * @desc Convert rgb object to hsv\n    * @param rgb - rgb object\n  */\n  public static rgbToHsv(rgb: RgbColor): HsvColor {\n    const r = rgb.r / 255;\n    const g = rgb.g / 255;\n    const b = rgb.b / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const delta = max - min;\n    let hue = 0;\n    let value = max;\n    let saturation = max === 0 ? 0 : delta / max;\n    switch (max) {\n      case min: \n        hue = 0; // achromatic\n        break;\n      case r: \n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n      case g: \n        hue = (b - r) / delta + 2;\n        break;\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n    return {\n      h: (hue * 60) % 360,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp(value * 100, 0, 100)\n    }\n  }\n\n  /**\n    * @desc Convert hsv object to hsl\n    * @param hsv - hsv object\n  */\n  public static hsvToHsl(hsv: HsvColor): HslColor {\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const l = (2 - s) * v;\n    const divisor = l <= 1 ? l : (2 - l);\n    // Avoid division by zero when lightness is close to zero\n    const saturation = divisor < 1e-9 ? 0 : (s * v) / divisor;\n    return {\n      h: hsv.h,\n      s: clamp(saturation * 100, 0, 100),\n      l: clamp(l * 50, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert hsl object to hsv\n    * @param hsl - hsl object\n  */\n  public static hslToHsv(hsl: HslColor): HsvColor {\n    const l = hsl.l * 2;\n    const s = (hsl.s * ((l <= 100) ? l : 200 - l)) / 100;\n    // Avoid division by zero when l + s is near 0\n    const saturation = (l + s < 1e-9) ? 0 : (2 * s) / (l + s);\n    return {\n      h: hsl.h,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp((l + s) / 2, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert a kelvin temperature to an approx, RGB value\n    * @param kelvin - kelvin temperature\n  */\n   public static kelvinToRgb(kelvin: number): RgbColor {\n    var temperature = kelvin / 100.0;\n    var r, g, b;\n    if (temperature < 66.0) {\n      r = 255;\n    } else {\n      r = temperature - 55.0;\n      r = 351.97690566805693+ 0.114206453784165 * r - 40.25366309332127 * Math.log(r);\n      if (r < 0) r = 0;\n      if (r > 255) r = 255;\n    }\n    /* Calculate g */\n    if (temperature < 66.0) {\n      g = temperature - 2;\n      g = -155.25485562709179 - 0.44596950469579133 * g + 104.49216199393888 * Math.log(g);\n      if (g < 0) g = 0;\n      if (g > 255) g = 255;\n    } else {\n      g = temperature - 50.0;\n      g = 325.4494125711974 + 0.07943456536662342 * g - 28.0852963507957 * Math.log(g);\n      if (g < 0) g = 0;\n      if (g > 255) g = 255;\n    }\n    /* Calculate b */\n    if (temperature >= 66.0) {\n      b = 255;\n    } else {\n      if (temperature <= 20.0) {\n        b = 0;\n      } else {\n        b = temperature - 10;\n        b = -254.76935184120902 + 0.8274096064007395 * b + 115.67994401066147 * Math.log(b);\n        if (b < 0) b = 0;\n        if (b > 255) b = 255;\n      }\n    }\n    return {r: r, b: b, g: g};\n  }\n\n   /**\n    * @desc Convert an RGB color to an approximate kelvin temperature\n    * @param kelvin - kelvin temperature\n  */\n  public static rgbToKelvin(rgb: RgbColor): number {\n    var temperature, testRGB;\n    var epsilon=0.4;\n    var minTemperature = 1000;\n    var maxTemperature = 40000;\n    while (maxTemperature - minTemperature > epsilon) {\n      temperature = (maxTemperature + minTemperature) / 2;\n      testRGB = IroColor.kelvinToRgb(temperature);\n      if ((testRGB.b / testRGB.r) >= (rgb.b / rgb.r)) {\n        maxTemperature = temperature;\n      } else {\n        minTemperature = temperature;\n      }\n    }\n    return temperature;\n  }\n\n  public get hsv(): HsvColor {\n    // value is cloned to allow changes to be made to the values before passing them back\n    const value = this.$;\n    return {h: value.h, s: value.s, v: value.v};\n  }\n\n  public set hsv(newValue: HsvColor) {\n    const oldValue = this.$;\n\n    newValue = { ...oldValue, ...newValue };\n    // If this Color is being watched for changes we need to compare the new and old values to check the difference\n    // Otherwise we can just be lazy\n    if (this.onChange) {\n      // Compute changed values\n      let changes: ColorChanges = {\n        h: false,\n        v: false,\n        s: false,\n        a: false,\n      };\n\n      for (let key in oldValue) {\n        changes[key] = newValue[key] != oldValue[key]\n      };\n      // Update the old value\n      this.$ = newValue;\n      // If the value has changed, call hook callback\n      if (changes.h || changes.s || changes.v || changes.a) this.onChange(this, changes);\n    } else {\n      this.$ = newValue;\n    }\n  }\n\n  public get hsva(): HsvColor {\n    return {...this.$};\n  }\n\n  public set hsva(value: HsvColor) {\n    this.hsv = value;\n  }\n\n  public get hue(): number {\n    return this.$.h;\n  }\n\n  public set hue(value: number) {\n    this.hsv = { h: value };\n  }\n\n  public get saturation(): number {\n    return this.$.s;\n  }\n\n  public set saturation(value: number) {\n    this.hsv = { s: value };\n  }\n\n  public get value(): number {\n    return this.$.v;\n  }\n\n  public set value(value: number) {\n    this.hsv = { v: value };\n  }\n\n  public get alpha(): number {\n    return this.$.a;\n  }\n\n  public set alpha(value: number) {\n    this.hsv = { ...this.hsv, a: value };\n  }\n\n  public get kelvin(): number {\n    return round(IroColor.rgbToKelvin(this.raw_rgb));\n  }\n\n  public set kelvin(value: number) {\n    this.rgb = IroColor.kelvinToRgb(value);\n  }\n\n  public get red(): number {\n    const rgb = this.rgb;\n    return rgb.r;\n  }\n\n  public set red(value: number) {\n    this.rgb = { ...this.rgb, r: value };\n  }\n\n  public get green(): number {\n    const rgb = this.rgb;\n    return rgb.g;\n  }\n\n  public set green(value: number) {\n    this.rgb = { ...this.rgb, g: value };\n  }\n\n  public get blue(): number {\n    const rgb = this.rgb;\n    return rgb.b;\n  }\n\n  public set blue(value: number) {\n    this.rgb = { ...this.rgb, b: value };\n  }\n\n  public get rgb(): RgbColor {\n    const {r, g, b} = IroColor.hsvToRgb(this.$);\n    return {\n      r: round(r),\n      g: round(g),\n      b: round(b)\n    };\n  }\n\n  public set rgb(value: RgbColor) {\n    this.hsv = {\n      ...IroColor.rgbToHsv(value), \n      a: (value.a === undefined) ? this.alpha : value.a\n    };\n  }\n\n  public get raw_rgb(): RgbColor {\n    const {r, g, b} = IroColor.hsvToRgb(this.$);\n    return {\n      r: r,\n      g: g,\n      b: b\n    };\n  }\n\n  public get rgba(): RgbColor {\n    return { ...this.rgb, a: this.alpha };\n  }\n\n  public set rgba(value: RgbColor) {\n    this.rgb = value;\n  }\n\n  public get hsl(): HslColor {\n    const {h, s, l} = IroColor.hsvToHsl(this.$);\n    return {\n      h: round(h),\n      s: round(s),\n      l: round(l),\n    };\n  }\n\n  public set hsl(value: HslColor) {\n    this.hsv = {\n      ...IroColor.hslToHsv(value), \n      a: (value.a === undefined) ? this.alpha : value.a\n    };\n  }\n\n  public get hsla(): HslColor {\n    return { ...this.hsl, a: this.alpha };\n  }\n\n  public set hsla(value: HslColor) {\n    this.hsl = value;\n  }\n\n  public get rgbString(): string {\n    const rgb = this.rgb;\n    return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n  }\n\n  public set rgbString(value: string) {\n    let match;\n    let r, g, b, a = 1;\n    if (match = REGEX_FUNCTIONAL_RGB.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n    }\n    else if (match = REGEX_FUNCTIONAL_RGBA.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a};\n    } \n    else {\n      throw new Error('Invalid rgb string');\n    }\n  }\n\n  public get rgbaString(): string {\n    const rgba = this.rgba;\n    return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n  }\n\n  public set rgbaString(value: string) {\n    this.rgbString = value;\n  }\n\n  public get hexString(): string {\n    const rgb = this.rgb;\n    return `#${ intToHex(rgb.r) }${ intToHex(rgb.g) }${ intToHex(rgb.b) }`;\n  }\n\n  public set hexString(value: string) {\n    let match;\n    let r, g, b, a = 255;\n    if (match = REGEX_HEX_3.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n    }\n    else if (match = REGEX_HEX_4.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n      a = parseHexInt(match[4]) * 17;\n    }\n    else if (match = REGEX_HEX_6.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n    }\n    else if (match = REGEX_HEX_8.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n      a = parseHexInt(match[4]);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a: a / 255};\n    }\n    else {\n      throw new Error('Invalid hex string');\n    }\n  }\n\n  public get hex8String(): string {\n    const rgba = this.rgba;\n    return `#${intToHex(rgba.r)}${intToHex(rgba.g)}${intToHex(rgba.b)}${intToHex(floor(rgba.a * 255))}`;\n  }\n\n  public set hex8String(value: string) {\n    this.hexString = value;\n  }\n\n  public get hslString(): string {\n    const hsl = this.hsl;\n    return `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`;\n  }\n\n  public set hslString(value: string) {\n    let match;\n    let h, s, l, a = 1;\n    if (match = REGEX_FUNCTIONAL_HSL.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n    }\n    else if (match = REGEX_FUNCTIONAL_HSLA.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.hsl = {h, s, l, a};\n    } \n    else {\n      throw new Error('Invalid hsl string');\n    }\n  }\n\n  public get hslaString(): string {\n    const hsla = this.hsla;\n    return `hsla(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a})`;\n  }\n\n  public set hslaString(value: string) {\n    this.hslString = value;\n  }\n}","import { IroColor } from './color';\nimport { CssGradientStops } from './css';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport type SliderShape = 'bar' | 'circle' | '';\nexport type SliderType = 'red' | 'green' | 'blue' |'alpha' | 'hue' | 'saturation' | 'value' | 'kelvin' | '';\n\nexport interface SliderOptions extends IroColorPickerOptions {\n  color: IroColor;\n  sliderShape: SliderShape;\n  sliderType: SliderType;\n  sliderSize: number;\n  sliderLength: number;\n  minTemperature: number;\n  maxTemperature: number;\n  showInput: boolean;\n}\n\nexport const sliderDefaultOptions = {\n  sliderShape: 'bar',\n  sliderType: 'value',\n  minTemperature: 2200,\n  maxTemperature: 11000\n}\n\n/**\n * @desc Get the CSS styles for the slider root\n * @param props - slider props\n */\nexport function getSliderStyles(props: Partial<SliderOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the slider\n * @param props - slider props\n */\nexport function getSliderDimensions(props: Partial<SliderOptions>) {\n  let { width, sliderSize: sliderSize, borderWidth, handleRadius, padding, sliderShape } = props;\n  let length: number;\n  if (props.showInput) {\n    length = width - 55;\n  } else {\n    length = props.sliderLength ?? width;\n  }\n\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  // automatically calculate sliderSize if its not defined\n  sliderSize = sliderSize ?? padding * 2 + handleRadius * 2;\n  if (sliderShape === 'circle') {\n    return {\n      handleStart: props.padding + props.handleRadius,\n      handleRange: width - padding * 2 - handleRadius * 2,\n      width: width,\n      height: width,\n      cx: width / 2,\n      cy: width / 2,\n      radius: width / 2 - borderWidth / 2\n    }\n  } else {\n    return {\n      handleStart: sliderSize / 2,\n      handleRange: length - sliderSize,\n      radius: sliderSize / 2,\n      x: 0,\n      y: 0,\n      width: ishorizontal ? sliderSize : length,\n      height: ishorizontal ? length : sliderSize,\n    }\n  }\n}\n\n/**\n * @desc Get the current slider value for a given color, as a percentage\n * @param props - slider props\n * @param color\n */\nexport function getCurrentSliderValue(props: Partial<SliderOptions>, color: IroColor) {\n  const hsva = color.hsva;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return rgb.r / 2.55;\n    case 'green':\n      return rgb.g / 2.55;\n    case 'blue':\n      return rgb.b / 2.55;\n    case 'alpha':\n      return hsva.a * 100;\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      const percent = ((color.kelvin - minTemperature) / temperatureRange) * 100;\n      // clmap percentage\n      return Math.max(0, Math.min(percent, 100));\n    case 'hue':\n      return hsva.h /= 3.6;\n    case 'saturation':\n      return hsva.s;\n    case 'value':\n    default:\n      return hsva.v;\n  }\n}\n\n/**\n * @desc Get the current slider value from user input\n * @param props - slider props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getSliderValueFromInput(props: Partial<SliderOptions>, x: number, y: number) {\n  const { handleRange, handleStart } = getSliderDimensions(props);\n  let handlePos;\n  if (props.layoutDirection === 'horizontal') {\n    handlePos = -1 * y + handleRange + handleStart;\n  } else {\n    handlePos = x - handleStart;\n  }\n  // clamp handle position\n  handlePos = Math.max(Math.min(handlePos, handleRange), 0);\n  const percent = Math.round((100 / handleRange) * handlePos);\n  switch (props.sliderType) {\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      return minTemperature + temperatureRange * (percent / 100);\n    case 'alpha':\n      return percent / 100;\n    case 'hue':\n      return percent * 3.6;\n    case 'red':\n    case 'blue':\n    case 'green':\n      return percent * 2.55;\n    default:\n      return percent;\n  }\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - slider props\n * @param color\n */\nexport function getSliderHandlePosition(props: Partial<SliderOptions>, color: IroColor) {\n  const { width, height, handleRange, handleStart } = getSliderDimensions(props);\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  const sliderValue = getCurrentSliderValue(props, color);\n  const midPoint = ishorizontal ? width / 2 : height / 2;\n  let handlePos = handleStart + (sliderValue / 100) * handleRange;\n  if (ishorizontal) {\n    handlePos = -1 * handlePos + handleRange + handleStart * 2;\n  } \n  return {\n    x: ishorizontal ? midPoint : handlePos, \n    y: ishorizontal ? handlePos : midPoint\n  };\n}\n\n/**\n * @desc Get the gradient stops for a slider\n * @param props - slider props\n * @param color\n */\nexport function getSliderGradient(props: Partial<SliderOptions>, color: IroColor): CssGradientStops {\n  const hsv = color.hsv;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return [\n        [0, `rgb(${ 0 },${ rgb.g },${ rgb.b })`],\n        [100, `rgb(${ 255 },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'green':\n      return [\n        [0, `rgb(${ rgb.r },${ 0 },${ rgb.b })`],\n        [100, `rgb(${ rgb.r },${ 255 },${ rgb.b })`],\n      ];\n    case 'blue':\n      return [\n        [0, `rgb(${ rgb.r },${ rgb.g },${ 0 })`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ 255 })`],\n      ];\n    case 'alpha':\n      return [\n        [0, `rgba(${ rgb.r },${ rgb.g },${ rgb.b },0)`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'kelvin':\n      const stops = [];\n      const min = props.minTemperature;\n      const max = props.maxTemperature;\n      const numStops = 8;\n      const range = max - min;\n      for (let kelvin = min, stop = 0; kelvin < max; kelvin += range / numStops, stop += 1) {\n        const { r, g, b } = IroColor.kelvinToRgb(kelvin);\n        stops.push([ 100 / numStops * stop, `rgb(${r},${g},${b})` ]);\n      }\n      return stops;\n    case 'hue':\n      return [\n        [0,      '#f00'],\n        [16.666, '#ff0'],\n        [33.333, '#0f0'],\n        [50,     '#0ff'],\n        [66.666, '#00f'],\n        [83.333, '#f0f'],\n        [100,    '#f00'],\n      ];\n    case 'saturation':\n      const noSat = IroColor.hsvToHsl({h: hsv.h, s: 0, v: hsv.v});\n      const fullSat = IroColor.hsvToHsl({h: hsv.h, s: 100, v: hsv.v});\n      return [\n        [0, `hsl(${noSat.h},${noSat.s}%,${noSat.l}%)`],\n        [100, `hsl(${fullSat.h},${fullSat.s}%,${fullSat.l}%)`]\n      ];\n    case 'value':\n    default:\n      const hsl = IroColor.hsvToHsl({h: hsv.h, s: hsv.s, v: 100});\n      return [\n        [0, '#000'],\n        [100, `hsl(${hsl.h},${hsl.s}%,${hsl.l}%)`]\n      ];\n  }\n}\n\n/**\n * @desc Get the gradient coords for a slider\n * @param props - slider props\n */\nexport function getSliderGradientCoords(props: Partial<SliderOptions>) {\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  return {\n    x1: '0%',\n    y1: ishorizontal ? '100%' : '0%',\n    x2: ishorizontal ? '0%' : '100%',\n    y2: '0%'\n  }\n}","import { IroColor } from './color';\nimport { SliderType } from './slider';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport interface InputOptions extends IroColorPickerOptions {\n  color: IroColor;\n  sliderType: SliderType;\n  minTemperature: number;\n  maxTemperature: number;\n}\n\n/**\n * @desc Clamp slider value between min and max values\n * @param type - props.sliderType\n * @param value - value to clamp\n */\n export function clampSliderValue(props: Partial<InputOptions>, value: number) {\n  function clamp(num: number, min: number, max: number) {\n    return Math.min(Math.max(num, min), max);\n  }\n  switch(props.sliderType) {\n    case 'hue':\n      return clamp(value, 0, 360);\n    case 'saturation':\n    case 'value':\n      return clamp(value, 0, 100);\n    case 'red':\n    case 'green':\n    case 'blue':\n      return clamp(value, 0, 255);\n    case 'alpha':\n      return clamp(value, 0, 1);\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      return clamp(value, minTemperature, maxTemperature);\n    }\n}\n\n/**\n * @desc Get the current slider value from input field input\n * @param props - slider props\n * @param e - KeyboardEvent\n */\nexport function getSliderValueFromInputField(e: KeyboardEvent) {\n  let target = (e.target as HTMLInputElement);\n  let valueNum = parseInt(target.value);\n  // regex for digit or dot (.)\n  if (!/^([0-9]|\\.)$/i.test((e).key)) {\n    e.preventDefault();\n    return valueNum;\n  }\n  let valueString = target.value.toString();\n  if (target.selectionStart !== undefined) { // cursor position\n    valueString = valueString.substring(0, target.selectionStart) +\n      e.key.toString() +\n      valueString.substring(target.selectionEnd);\n  } else {\n    valueString = valueString + e.key.toString();\n  }\n  return +valueString;\n}\n\n/**\n * @desc Get the current slider value from clipboard data\n * @param props - slider props\n * @param e - ClipboardEvent\n */\n export function getSliderValueFromClipboard(props: Partial<InputOptions>, e: ClipboardEvent) {\n  // allow only whole or decimal numbers\n  const r = /^[+]?([.]\\d+|\\d+([.]\\d+)?)$/i;\n  const valueString: string = e.clipboardData.getData('text');\n  if (!r.test(valueString)) {\n    return 0;\n  }\n  const valueNum = +valueString;\n  return clampSliderValue(props, valueNum);\n}","import { IroColorPickerOptions } from './colorPickerOptions';\nimport { IroColor, IroColorValue } from './color';\n\nexport interface WheelProps extends IroColorPickerOptions {\n  color: IroColor;\n}\n\nconst TAU = Math.PI * 2;\n\n// javascript's modulo operator doesn't produce positive numbers with negative input\n// https://dev.to/maurobringolf/a-neat-trick-to-compute-modulo-of-negative-numbers-111e\nconst mod = (a: number, n: number) => (a % n + n) % n;\n\n// distance between points (x, y) and (0, 0)\nconst dist = (x: number, y: number) => Math.sqrt(x * x + y * y);\n\n/**\n * @param props - wheel props\n * @internal\n */\nfunction getHandleRange(props: Partial<WheelProps>) {\n  return props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n}\n\n/**\n * Returns true if point (x, y) lands inside the wheel\n * @param props - wheel props\n * @param x \n * @param y \n */\nexport function isInputInsideWheel(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy } = getWheelDimensions(props);\n  const r = props.width / 2;\n  return dist(cx - x, cy - y) < r;\n}\n\n/**\n * @desc Get the point as the center of the wheel\n * @param props - wheel props\n */\nexport function getWheelDimensions(props: Partial<WheelProps>) {\n  const r = props.width / 2;\n  return {\n    width: props.width,\n    radius: r - props.borderWidth,\n    cx: r,\n    cy: r\n  };\n}\n\n/**\n * @desc Translate an angle according to wheelAngle and wheelDirection\n * @param props - wheel props\n * @param angle - input angle\n */\nexport function translateWheelAngle(props: Partial<WheelProps>, angle: number, invert?: boolean) {\n  const wheelAngle = props.wheelAngle;\n  const wheelDirection = props.wheelDirection\n  // inverted and clockwisee\n  if (invert && wheelDirection === 'clockwise')\n    angle = wheelAngle + angle;\n  // clockwise (input handling)\n  else if (wheelDirection === 'clockwise')\n    angle = (360 - wheelAngle) + angle;\n  // inverted and anticlockwise\n  else if (invert && wheelDirection === 'anticlockwise')\n    angle = (wheelAngle + 180) - angle;\n  // anticlockwise (input handling)\n  else if (wheelDirection === 'anticlockwise')\n    angle = wheelAngle - angle;\n  return mod(angle, 360);\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - wheel props\n * @param color\n */\nexport function getWheelHandlePosition(props: Partial<WheelProps>, color: IroColor) {\n  const hsv = color.hsv;\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = getHandleRange(props);\n  const handleAngle = (180 + translateWheelAngle(props, hsv.h, true)) * (TAU / 360);\n  const handleDist = (hsv.s / 100) * handleRange;\n  const direction = props.wheelDirection === 'clockwise' ? -1 : 1;\n  return {\n    x: cx + handleDist * Math.cos(handleAngle) * direction,\n    y: cy + handleDist * Math.sin(handleAngle) * direction,\n  }\n}\n\n/**\n * @desc Get the current wheel value from user input\n * @param props - wheel props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getWheelValueFromInput(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = getHandleRange(props);\n  x = cx - x;\n  y = cy - y;\n  // Calculate the hue by converting the angle to radians\n  const hue = translateWheelAngle(props, Math.atan2(-y, -x) * (360 / TAU));\n  // Find the point's distance from the center of the wheel\n  // This is used to show the saturation level\n  const handleDist = Math.min(dist(x, y), handleRange);\n  return {\n    h: Math.round(hue),\n    s: Math.round((100 / handleRange) * handleDist)\n  };\n}","import { IroColor } from './color';\nimport { CssGradientStops } from './css';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport interface BoxOptions extends IroColorPickerOptions {\n  color: IroColor;\n}\n\n/**\n * @desc Get the CSS styles for the box root element\n * @param props - box props\n */\nexport function getBoxStyles(props: Partial<BoxOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the box\n * @param props - box props\n */\nexport function getBoxDimensions(props: Partial<BoxOptions>) {\n  const { width, boxHeight, padding, handleRadius } = props;\n  return {\n    width: width,\n    height: boxHeight ?? width,\n    radius: padding + handleRadius\n  };\n}\n\n/**\n * @desc Get the current box value from user input\n * @param props - box props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getBoxValueFromInput(props: Partial<BoxOptions>, x: number, y: number) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  const percentX = ((x - handleStart) / handleRangeX) * 100;\n  const percentY = ((y - handleStart) / handleRangeY) * 100;\n  return {\n    s: Math.max(0, Math.min(percentX, 100)),\n    v: Math.max(0, Math.min(100 - percentY, 100))\n  }\n}\n\n/**\n * @desc Get the current box handle position for a given color\n * @param props - box props\n * @param color\n */\nexport function getBoxHandlePosition(props: Partial<BoxOptions>, color: IroColor) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const hsv = color.hsv;\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  return { \n    x: handleStart + (hsv.s / 100) * handleRangeX,\n    y: handleStart + (handleRangeY - ((hsv.v / 100) * handleRangeY))\n  }\n}\n\n/**\n * @desc Get the gradient stops for a box\n * @param props - box props\n * @param color\n */\nexport function getBoxGradients(props: Partial<BoxOptions>, color: IroColor): CssGradientStops[] {\n  const hue = color.hue;\n  return [\n    // saturation gradient\n    [\n      [0, '#fff'],\n      [100, `hsl(${hue},100%,50%)`],\n    ],\n    // lightness gradient\n    [\n      [0, 'rgba(0,0,0,0)'],\n      [100, '#000'],\n    ]\n  ];\n}","import { IroColorPickerOptions } from './colorPickerOptions';\n\n// Keep track of html <base> elements for resolveSvgUrl\n// getElementsByTagName returns a live HTMLCollection, which stays in sync with the DOM tree\n// So it only needs to be called once\nlet BASE_ELEMENTS:  HTMLCollectionOf<HTMLBaseElement> | undefined;\n\n/**\n * @desc Resolve an SVG reference URL\n * This is required to work around how Safari and iOS webviews handle gradient URLS under certain conditions\n * If a page is using a client-side routing library which makes use of the HTML <base> tag, \n * Safari won't be able to render SVG gradients properly (as they are referenced by URLs)\n * More info on the problem: \n * https://stackoverflow.com/questions/19742805/angular-and-svg-filters/19753427#19753427\n * https://github.com/jaames/iro.js/issues/18\n * https://github.com/jaames/iro.js/issues/45\n * https://github.com/jaames/iro.js/pull/89\n * @props url - SVG reference URL\n */\nexport function resolveSvgUrl(url: string) {\n  if (!BASE_ELEMENTS)\n    BASE_ELEMENTS = document.getElementsByTagName('base');\n  // Sniff useragent string to check if the user is running Safari\n  const ua = window.navigator.userAgent;\n  const isSafari = /^((?!chrome|android).)*safari/i.test(ua);\n  const isIos = /iPhone|iPod|iPad/i.test(ua);\n  const location = window.location;\n  return ((isSafari || isIos) && (BASE_ELEMENTS.length > 0)) ? `${location.protocol}//${location.host}${location.pathname}${location.search}${url}` : url;\n}\n\n/**\n * @desc Get the path commands to draw an svg arc\n * @props cx - arc center point x\n * @props cy - arc center point y\n * @props radius - arc radius\n * @props startAngle - arc start angle\n * @props endAngle - arc end angle\n */\nexport function getSvgArcPath(cx: number, cy: number, radius: number, startAngle: number, endAngle: number) {\n  const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n  startAngle *= Math.PI / 180;\n  endAngle *= Math.PI / 180;\n  const x1 = cx + radius * Math.cos(endAngle);\n  const y1 = cy + radius * Math.sin(endAngle);\n  const x2 = cx + radius * Math.cos(startAngle);\n  const y2 = cy + radius * Math.sin(startAngle);\n  return `M ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 0 ${x2} ${y2}`;\n}\n\n/**\n * @desc Given a specifc (x, y) position, test if there's a handle there and return its index, else return null.\n *       This is used for components like the box and wheel which support multiple handles when multicolor is active\n * @props x - point x position\n * @props y - point y position\n * @props handlePositions - array of {x, y} coords for each handle\n */\nexport function getHandleAtPoint(props: Partial<IroColorPickerOptions>, x: number, y: number, handlePositions: {x: number, y: number}[]) {\n  for (let i = 0; i < handlePositions.length; i++) {\n    const dX = handlePositions[i].x - x;\n    const dY = handlePositions[i].y - y;\n    const dist = Math.sqrt(dX * dX + dY * dY);\n    if (dist < props.handleRadius) {\n      return i;\n    }\n  }\n  return null;\n}","import { IroColorPickerOptions } from './colorPickerOptions';\n\nexport function cssBorderStyles(props: IroColorPickerOptions) {\n  return {\n    boxSizing: 'border-box',\n    border: `${ props.borderWidth }px solid ${ props.borderColor }`\n  };\n}\n\nexport type CssGradientType = 'linear' | 'radial' | 'conical';\nexport type CssGradientStops = [number, number | string][];\n\nexport function cssGradient(type: CssGradientType, direction: string, stops: CssGradientStops) {\n  return `${ type }-gradient(${ direction }, ${ stops.map(([o, col]) => `${ col } ${ o }%`).join(',') })`;\n}\n\nexport function cssValue(value: number | string) {\n  if (typeof(value) === 'string')\n    return value;\n  return `${ value }px`;\n}","import { IroColor, IroColorValue } from './color';\n\nexport type LayoutDirection = 'vertical' | 'horizontal' | '';\n\nexport type WheelDirection = 'clockwise' | 'anticlockwise' | '';\n\nexport interface IroColorPickerOptions {\n  width?: number;\n  height?: number;\n  color?: IroColorValue;\n  colors?: IroColorValue[];\n  padding?: number;\n  layoutDirection?: LayoutDirection;\n  borderColor?: string;\n  borderWidth?: number;\n  handleRadius?: number;\n  activeHandleRadius?: number;\n  handleSvg?: string;\n  handleProps?: any;\n  wheelLightness?: boolean;\n  wheelAngle?: number;\n  wheelDirection?: WheelDirection;\n  sliderSize?: number;\n  sliderMargin?: number;\n  boxHeight?: number;\n}\n\nexport const iroColorPickerOptionDefaults: IroColorPickerOptions = {\n  width: 300,\n  height: 300,\n  color: '#fff',\n  colors: [],\n  padding: 6,\n  layoutDirection: 'vertical',\n  borderColor: '#fff',\n  borderWidth: 0,\n  handleRadius: 8,\n  activeHandleRadius: null,\n  handleSvg: null,\n  handleProps: {x: 0, y: 0},\n  wheelLightness: true,\n  wheelAngle: 0,\n  wheelDirection: 'anticlockwise',\n  sliderSize: null,\n  sliderMargin: 12,\n  boxHeight: null\n}"],"names":["CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH_3","PERMISSIVE_MATCH_4","REGEX_FUNCTIONAL_RGB","RegExp","REGEX_FUNCTIONAL_RGBA","REGEX_FUNCTIONAL_HSL","REGEX_FUNCTIONAL_HSLA","HEX_START","HEX_INT_SINGLE","HEX_INT_DOUBLE","REGEX_HEX_3","REGEX_HEX_4","REGEX_HEX_6","REGEX_HEX_8","round","Math","floor","clamp","num","min","max","parseUnit","str","isPercentage","indexOf","parseFloat","parseHexInt","parseInt","intToHex","int","toString","padStart","IroColor","value","onChange","$","h","s","v","a","set","initialValue","test","hexString","rgbString","hslString","hsva","rgb","hsv","hsl","kelvin","Error","setChannel","format","channel","reset","clone","unbind","undefined","hsvToRgb","i","f","p","q","t","mod","r","g","b","rgbToHsv","delta","hue","saturation","hsvToHsl","l","divisor","hslToHsv","kelvinToRgb","temperature","log","rgbToKelvin","testRGB","epsilon","minTemperature","maxTemperature","newValue","oldValue","changes","key","raw_rgb","alpha","match","exec","rgba","hsla","sliderDefaultOptions","sliderShape","sliderType","getSliderStyles","props","layoutDirection","sliderMargin","getSliderDimensions","width","sliderSize","borderWidth","handleRadius","padding","length","showInput","sliderLength","ishorizontal","handleStart","handleRange","height","cx","cy","radius","x","y","getCurrentSliderValue","color","temperatureRange","percent","getSliderValueFromInput","handlePos","getSliderHandlePosition","sliderValue","midPoint","getSliderGradient","stops","numStops","range","stop","push","noSat","fullSat","getSliderGradientCoords","x1","y1","x2","y2","clampSliderValue","getSliderValueFromInputField","e","target","valueNum","preventDefault","valueString","selectionStart","substring","selectionEnd","getSliderValueFromClipboard","clipboardData","getData","TAU","PI","n","dist","sqrt","getHandleRange","isInputInsideWheel","getWheelDimensions","translateWheelAngle","angle","invert","wheelAngle","wheelDirection","getWheelHandlePosition","handleAngle","handleDist","direction","cos","sin","getWheelValueFromInput","atan2","getBoxStyles","getBoxDimensions","boxHeight","getBoxValueFromInput","handleRangeX","handleRangeY","percentX","percentY","getBoxHandlePosition","getBoxGradients","BASE_ELEMENTS","resolveSvgUrl","url","document","getElementsByTagName","ua","window","navigator","userAgent","isSafari","isIos","location","protocol","host","pathname","search","getSvgArcPath","startAngle","endAngle","largeArcFlag","getHandleAtPoint","handlePositions","dX","dY","cssBorderStyles","boxSizing","border","borderColor","cssGradient","type","map","o","col","join","cssValue","iroColorPickerOptionDefaults","colors","activeHandleRadius","handleSvg","handleProps","wheelLightness"],"mappings":"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"}