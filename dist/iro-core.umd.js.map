{"version":3,"file":"iro-core.umd.js","sources":["../src/color.ts","../src/slider.ts","../src/input.ts","../src/wheel.ts","../src/box.ts","../src/util.ts","../src/css.ts","../src/colorPickerOptions.ts"],"sourcesContent":["// Some regular expressions for rgb() and hsl() Colors are borrowed from tinyColor\n// https://github.com/bgrins/TinyColor\n// Kelvin temperature math borrowed from Neil Barlett's implementation\n// from https://github.com/neilbartlett/color-temperature\n\n// https://www.w3.org/TR/css3-values/#integers\nconst CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// http://www.w3.org/TR/css3-values/#number-value\nconst CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number. Don't capture the either/or, just the entire outcome\nconst CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')';\n\n// Parse function params\n// Parens and commas are optional, and this also allows for whitespace between numbers\nconst PERMISSIVE_MATCH_3 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\nconst PERMISSIVE_MATCH_4 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\n\n// Regex patterns for functional color strings\nconst REGEX_FUNCTIONAL_RGB = new RegExp('rgb' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_RGBA = new RegExp('rgba' + PERMISSIVE_MATCH_4);\nconst REGEX_FUNCTIONAL_HSL = new RegExp('hsl' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_HSLA = new RegExp('hsla' + PERMISSIVE_MATCH_4);\n\n// Color string parsing regex\nconst HEX_START = '^(?:#?|0x?)';\nconst HEX_INT_SINGLE = '([0-9a-fA-F]{1})';\nconst HEX_INT_DOUBLE = '([0-9a-fA-F]{2})';\nconst REGEX_HEX_3 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_4 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_6 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\nconst REGEX_HEX_8 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\n\n// Kelvin temperature bounds\nconst KELVIN_MIN = 2000;\nconst KELVIN_MAX = 40000;\n\n// Math shorthands\nconst { log, round, floor } = Math;\n\n/**\n * @desc Clamp a number between a min and max value\n * @param num - input value\n * @param min - min allowed value\n * @param max - max allowed value\n */\nfunction clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max)\n}\n\n/**\n * @desc Parse a css unit string - either regular int or a percentage number\n * @param str - css unit string\n * @param max - max unit value, used for calculating percentages\n */\nfunction parseUnit(str: string, max: number): number {\n  const isPercentage = str.indexOf('%') > -1;\n  const num = parseFloat(str);\n  return isPercentage ? (max / 100) * num : num;\n}\n\n/**\n * @desc Parse hex str to an int\n * @param str - hex string to parse\n */\nfunction parseHexInt(str: string): number {\n  return parseInt(str, 16);\n}\n\n/**\n * @desc Convert nunber into to 2-digit hex\n * @param int - number to convert\n */\nfunction intToHex(int: number): string {\n  return int.toString(16).padStart(2, '0');\n}\n\nexport interface ColorChanges {\n  h: boolean;\n  s: boolean;\n  v: boolean;\n  a: boolean;\n}\n\n// all hsv color channels are optional by design\nexport interface HsvColor {\n  h?: number;\n  s?: number;\n  v?: number;\n  a?: number;\n}\n\nexport interface RgbColor {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\nexport interface HslColor {\n  h: number;\n  s: number;\n  l: number;\n  a?: number;\n}\n\nexport interface KelvinColor {\n  kelvin: number;\n  _kelvin: number;\n}\n\nexport type IroColorValue = IroColor | HsvColor | RgbColor | HslColor | KelvinColor | string;\n\nexport class IroColor {\n  // internal color value storage\n  private $: HsvColor;\n  private onChange: Function;\n  private initialValue: HsvColor;\n\n  public index: number;\n  public _kelvin: number;\n\n  /**\n    * @constructor Color object\n    * @param value - initial color value\n  */\n  constructor(value?: IroColorValue, onChange?: Function) {\n    // The default Color value\n    this.$ = {h: 0, s: 0, v: 0, a: 1};\n    if (value) this.set(value);\n    // The watch callback function for this Color will be stored here\n    this.onChange = onChange;\n    this.initialValue = { ...this.$ }; // copy initial value\n  }\n\n  /**\n    * @desc Set the Color from any valid value\n    * @param value - new color value\n  */\n  public set(value: IroColorValue) {\n    if (typeof value === 'string') {\n      if (/^(?:#?|0x?)[0-9a-fA-F]{3,8}$/.test(value as string)) {\n        this.hexString = value as string;\n      }\n      else if (/^rgba?/.test(value as string)) {\n        this.rgbString = value as string;\n      }\n      else if (/^hsla?/.test(value as string)) {\n        this.hslString = value as string;\n      }\n    }\n    else if (typeof value === 'object') {\n      if (value instanceof IroColor) {\n        this.hsva = value.hsva;\n      }\n      else if ('r' in value && 'g' in value && 'b' in value) {\n        this.rgb = value;\n      }\n      else if ('h' in value && 's' in value && 'v' in value) {\n        this.hsv = value;\n      }\n      else if ('h' in value && 's' in value && 'l' in value) {\n        this.hsl = value;\n      }\n      else if ('kelvin' in value) {\n        this.kelvin = value.kelvin;\n      }\n    }\n    else {\n      throw new Error('Invalid color value');\n    }\n  }\n\n  /**\n    * @desc Shortcut to set a specific channel value\n    * @param format - hsv | hsl | rgb\n    * @param channel - individual channel to set, for example if model = hsl, chanel = h | s | l\n    * @param value - new value for the channel\n  */\n  public setChannel(format: string, channel: string, value: number) {\n    this[format] = {...this[format], [channel]: value};\n  }\n\n  /**\n   * @desc Reset color back to its initial value\n   */\n  public reset() {\n    this.hsva = this.initialValue;\n  }\n\n  /**\n    * @desc make new Color instance with the same value as this one\n  */\n  public clone() {\n    return new IroColor(this);\n  }\n\n  /**\n   * @desc remove color onChange\n   */\n  public unbind() {\n    this.onChange = undefined;\n  }\n\n  /**\n    * @desc Convert hsv object to rgb\n    * @param hsv - hsv color object\n  */\n  public static hsvToRgb(hsv: HsvColor): RgbColor {\n    const h = hsv.h / 60;\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const i = floor(h);\n    const f = h - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n    const mod = i % 6;\n    const r = [v, q, p, p, t, v][mod];\n    const g = [t, v, v, q, p, p][mod];\n    const b = [p, p, t, v, v, q][mod];\n    return {\n      r: clamp(r * 255, 0, 255), \n      g: clamp(g * 255, 0, 255), \n      b: clamp(b * 255, 0, 255)\n    };\n  }\n\n  /**\n    * @desc Convert rgb object to hsv\n    * @param rgb - rgb object\n  */\n  public static rgbToHsv(rgb: RgbColor): HsvColor {\n    const r = rgb.r / 255;\n    const g = rgb.g / 255;\n    const b = rgb.b / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const delta = max - min;\n    let hue = 0;\n    let value = max;\n    let saturation = max === 0 ? 0 : delta / max;\n    switch (max) {\n      case min: \n        hue = 0; // achromatic\n        break;\n      case r: \n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n      case g: \n        hue = (b - r) / delta + 2;\n        break;\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n    return {\n      h: (hue * 60) % 360,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp(value * 100, 0, 100)\n    }\n  }\n\n  /**\n    * @desc Convert hsv object to hsl\n    * @param hsv - hsv object\n  */\n  public static hsvToHsl(hsv: HsvColor): HslColor {\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const l = (2 - s) * v;\n    const divisor = l <= 1 ? l : (2 - l);\n    // Avoid division by zero when lightness is close to zero\n    const saturation = divisor < 1e-9 ? 0 : (s * v) / divisor;\n    return {\n      h: hsv.h,\n      s: clamp(saturation * 100, 0, 100),\n      l: clamp(l * 50, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert hsl object to hsv\n    * @param hsl - hsl object\n  */\n  public static hslToHsv(hsl: HslColor): HsvColor {\n    const l = hsl.l * 2;\n    const s = (hsl.s * ((l <= 100) ? l : 200 - l)) / 100;\n    // Avoid division by zero when l + s is near 0\n    const saturation = (l + s < 1e-9) ? 0 : (2 * s) / (l + s);\n    return {\n      h: hsl.h,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp((l + s) / 2, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert a kelvin temperature to an approx, RGB value\n    * @param kelvin - kelvin temperature\n  */\n  public static kelvinToRgb(kelvin: number): RgbColor {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n      r = 255\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g)\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b)\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r)\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g)\n      b = 255\n    }\n    return {\n      r: clamp(floor(r), 0, 255),\n      g: clamp(floor(g), 0, 255),\n      b: clamp(floor(b), 0, 255)\n    };\n  }\n\n   /**\n    * @desc Convert an RGB color to an approximate kelvin temperature\n    * @param kelvin - kelvin temperature\n  */\n  public static rgbToKelvin(rgb: RgbColor): number {\n    const { r, g, b } = rgb;\n    const eps = 0.4;\n    let minTemp = KELVIN_MIN;\n    let maxTemp = KELVIN_MAX;\n    let temp;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      const rgb = IroColor.kelvinToRgb(temp);\n      if ((rgb.b / rgb.r) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return temp;\n  }\n\n  public get hsv(): HsvColor {\n    // value is cloned to allow changes to be made to the values before passing them back\n    const value = this.$;\n    return {h: value.h, s: value.s, v: value.v};\n  }\n\n  public set hsv(newValue: HsvColor) {\n    const oldValue = this.$;\n\n    newValue = { ...oldValue, ...newValue };\n    // If this Color is being watched for changes we need to compare the new and old values to check the difference\n    // Otherwise we can just be lazy\n    if (this.onChange) {\n      // Compute changed values\n      let changes: ColorChanges = {\n        h: false,\n        v: false,\n        s: false,\n        a: false,\n      };\n\n      for (let key in oldValue) {\n        changes[key] = newValue[key] != oldValue[key]\n      };\n      // Update the old value\n      this.$ = newValue;\n      // If the value has changed, call hook callback\n      if (changes.h || changes.s || changes.v || changes.a) this.onChange(this, changes);\n    } else {\n      this.$ = newValue;\n    }\n  }\n\n  public get hsva(): HsvColor {\n    return {...this.$};\n  }\n\n  public set hsva(value: HsvColor) {\n    this.hsv = value;\n  }\n\n  public get hue(): number {\n    return this.$.h;\n  }\n\n  public set hue(value: number) {\n    this.hsv = { h: value };\n  }\n\n  public get saturation(): number {\n    return this.$.s;\n  }\n\n  public set saturation(value: number) {\n    this.hsv = { s: value };\n  }\n\n  public get value(): number {\n    return this.$.v;\n  }\n\n  public set value(value: number) {\n    this.hsv = { v: value };\n  }\n\n  public get alpha(): number {\n    return this.$.a;\n  }\n\n  public set alpha(value: number) {\n    this.hsv = { ...this.hsv, a: value };\n  }\n\n  public get kelvin(): number {\n    /** Rgb to kelvin conversion is a little funky, producing results\n     * that differ from the original value.\n     * Check if rgb values are equal and return RGB to kelvin conversion\n     * only if necessary\n     */\n    let res: number;\n    let rgb = IroColor.kelvinToRgb(this._kelvin);\n\n    if (\n      rgb.r === this.rgb.r &&\n      rgb.g === this.rgb.g &&\n      rgb.b === this.rgb.b\n    ) {\n      res = this._kelvin;\n    } else {\n      res = IroColor.rgbToKelvin(this.rgb);\n    }\n    return res;\n  }\n\n  public set kelvin(value: number) {\n    this.rgb = IroColor.kelvinToRgb(value);\n    this._kelvin = value;\n  }\n\n  public get red(): number {\n    const rgb = this.rgb;\n    return rgb.r;\n  }\n\n  public set red(value: number) {\n    this.rgb = { ...this.rgb, r: value };\n  }\n\n  public get green(): number {\n    const rgb = this.rgb;\n    return rgb.g;\n  }\n\n  public set green(value: number) {\n    this.rgb = { ...this.rgb, g: value };\n  }\n\n  public get blue(): number {\n    const rgb = this.rgb;\n    return rgb.b;\n  }\n\n  public set blue(value: number) {\n    this.rgb = { ...this.rgb, b: value };\n  }\n\n  public get rgb(): RgbColor {\n    const {r, g, b} = IroColor.hsvToRgb(this.$);\n    return {\n      r: round(r),\n      g: round(g),\n      b: round(b)\n    };\n  }\n\n  public set rgb(value: RgbColor) {\n    this.hsv = {\n      ...IroColor.rgbToHsv(value), \n      a: (value.a === undefined) ? this.alpha : value.a\n    };\n  }\n\n  public get rgba(): RgbColor {\n    return { ...this.rgb, a: this.alpha };\n  }\n\n  public set rgba(value: RgbColor) {\n    this.rgb = value;\n  }\n\n  public get hsl(): HslColor {\n    const {h, s, l} = IroColor.hsvToHsl(this.$);\n    return {\n      h: round(h),\n      s: round(s),\n      l: round(l),\n    };\n  }\n\n  public set hsl(value: HslColor) {\n    this.hsv = {\n      ...IroColor.hslToHsv(value), \n      a: (value.a === undefined) ? this.alpha : value.a\n    };\n  }\n\n  public get hsla(): HslColor {\n    return { ...this.hsl, a: this.alpha };\n  }\n\n  public set hsla(value: HslColor) {\n    this.hsl = value;\n  }\n\n  public get rgbString(): string {\n    const rgb = this.rgb;\n    return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n  }\n\n  public set rgbString(value: string) {\n    let match;\n    let r, g, b, a = 1;\n    if (match = REGEX_FUNCTIONAL_RGB.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n    }\n    else if (match = REGEX_FUNCTIONAL_RGBA.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a};\n    } \n    else {\n      throw new Error('Invalid rgb string');\n    }\n  }\n\n  public get rgbaString(): string {\n    const rgba = this.rgba;\n    return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n  }\n\n  public set rgbaString(value: string) {\n    this.rgbString = value;\n  }\n\n  public get hexString(): string {\n    const rgb = this.rgb;\n    return `#${ intToHex(rgb.r) }${ intToHex(rgb.g) }${ intToHex(rgb.b) }`;\n  }\n\n  public set hexString(value: string) {\n    let match;\n    let r, g, b, a = 255;\n    if (match = REGEX_HEX_3.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n    }\n    else if (match = REGEX_HEX_4.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n      a = parseHexInt(match[4]) * 17;\n    }\n    else if (match = REGEX_HEX_6.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n    }\n    else if (match = REGEX_HEX_8.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n      a = parseHexInt(match[4]);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a: a / 255};\n    }\n    else {\n      throw new Error('Invalid hex string');\n    }\n  }\n\n  public get hex8String(): string {\n    const rgba = this.rgba;\n    return `#${intToHex(rgba.r)}${intToHex(rgba.g)}${intToHex(rgba.b)}${intToHex(floor(rgba.a * 255))}`;\n  }\n\n  public set hex8String(value: string) {\n    this.hexString = value;\n  }\n\n  public get hslString(): string {\n    const hsl = this.hsl;\n    return `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`;\n  }\n\n  public set hslString(value: string) {\n    let match;\n    let h, s, l, a = 1;\n    if (match = REGEX_FUNCTIONAL_HSL.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n    }\n    else if (match = REGEX_FUNCTIONAL_HSLA.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.hsl = {h, s, l, a};\n    } \n    else {\n      throw new Error('Invalid hsl string');\n    }\n  }\n\n  public get hslaString(): string {\n    const hsla = this.hsla;\n    return `hsla(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a})`;\n  }\n\n  public set hslaString(value: string) {\n    this.hslString = value;\n  }\n}","import { IroColor } from './color';\nimport { CssGradientStops } from './css';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport type SliderShape = 'bar' | 'circle' | '';\nexport type SliderType = 'red' | 'green' | 'blue' |'alpha' | 'hue' | 'saturation' | 'value' | 'kelvin' | '';\n\nexport interface SliderOptions extends IroColorPickerOptions {\n  color: IroColor;\n  sliderShape: SliderShape;\n  sliderType: SliderType;\n  sliderSize: number;\n  sliderLength: number;\n  minTemperature: number;\n  maxTemperature: number;\n  showInput: boolean;\n}\n\nexport const sliderDefaultOptions = {\n  sliderShape: 'bar',\n  sliderType: 'value',\n  minTemperature: 2200,\n  maxTemperature: 11000\n}\n\n/**\n * @desc Get the CSS styles for the slider root\n * @param props - slider props\n */\nexport function getSliderStyles(props: Partial<SliderOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the slider\n * @param props - slider props\n */\nexport function getSliderDimensions(props: Partial<SliderOptions>) {\n  let { width, sliderSize: sliderSize, borderWidth, handleRadius, padding, sliderShape } = props;\n  let length: number;\n  if (props.showInput) {\n    length = width - 55;\n  } else {\n    length = props.sliderLength ?? width;\n  }\n\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  // automatically calculate sliderSize if its not defined\n  sliderSize = sliderSize ?? padding * 2 + handleRadius * 2;\n  if (sliderShape === 'circle') {\n    return {\n      handleStart: props.padding + props.handleRadius,\n      handleRange: width - padding * 2 - handleRadius * 2,\n      width: width,\n      height: width,\n      cx: width / 2,\n      cy: width / 2,\n      radius: width / 2 - borderWidth / 2\n    }\n  } else {\n    return {\n      handleStart: sliderSize / 2,\n      handleRange: length - sliderSize,\n      radius: sliderSize / 2,\n      x: 0,\n      y: 0,\n      width: ishorizontal ? sliderSize : length,\n      height: ishorizontal ? length : sliderSize,\n    }\n  }\n}\n\n/**\n * @desc Get the current slider value for a given color, as a percentage\n * @param props - slider props\n * @param color\n */\nexport function getCurrentSliderValue(props: Partial<SliderOptions>, color: IroColor) {\n  const hsva = color.hsva;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return rgb.r / 2.55;\n    case 'green':\n      return rgb.g / 2.55;\n    case 'blue':\n      return rgb.b / 2.55;\n    case 'alpha':\n      return hsva.a * 100;\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      const percent = ((color.kelvin - minTemperature) / temperatureRange) * 100;\n      // clmap percentage\n      return Math.max(0, Math.min(percent, 100));\n    case 'hue':\n      return hsva.h /= 3.6;\n    case 'saturation':\n      return hsva.s;\n    case 'value':\n    default:\n      return hsva.v;\n  }\n}\n\n/**\n * @desc Get the current slider value from user input\n * @param props - slider props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getSliderValueFromInput(props: Partial<SliderOptions>, x: number, y: number) {\n  const { handleRange, handleStart } = getSliderDimensions(props);\n  let handlePos;\n  if (props.layoutDirection === 'horizontal') {\n    handlePos = -1 * y + handleRange + handleStart;\n  } else {\n    handlePos = x - handleStart;\n  }\n  // clamp handle position\n  handlePos = Math.max(Math.min(handlePos, handleRange), 0);\n  const percent = Math.round((100 / handleRange) * handlePos);\n  switch (props.sliderType) {\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      return minTemperature + temperatureRange * (percent / 100);\n    case 'alpha':\n      return percent / 100;\n    case 'hue':\n      return percent * 3.6;\n    case 'red':\n    case 'blue':\n    case 'green':\n      return percent * 2.55;\n    default:\n      return percent;\n  }\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - slider props\n * @param color\n */\nexport function getSliderHandlePosition(props: Partial<SliderOptions>, color: IroColor) {\n  const { width, height, handleRange, handleStart } = getSliderDimensions(props);\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  const sliderValue = getCurrentSliderValue(props, color);\n  const midPoint = ishorizontal ? width / 2 : height / 2;\n  let handlePos = handleStart + (sliderValue / 100) * handleRange;\n  if (ishorizontal) {\n    handlePos = -1 * handlePos + handleRange + handleStart * 2;\n  } \n  return {\n    x: ishorizontal ? midPoint : handlePos, \n    y: ishorizontal ? handlePos : midPoint\n  };\n}\n\n/**\n * @desc Get the gradient stops for a slider\n * @param props - slider props\n * @param color\n */\nexport function getSliderGradient(props: Partial<SliderOptions>, color: IroColor): CssGradientStops {\n  const hsv = color.hsv;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return [\n        [0, `rgb(${ 0 },${ rgb.g },${ rgb.b })`],\n        [100, `rgb(${ 255 },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'green':\n      return [\n        [0, `rgb(${ rgb.r },${ 0 },${ rgb.b })`],\n        [100, `rgb(${ rgb.r },${ 255 },${ rgb.b })`],\n      ];\n    case 'blue':\n      return [\n        [0, `rgb(${ rgb.r },${ rgb.g },${ 0 })`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ 255 })`],\n      ];\n    case 'alpha':\n      return [\n        [0, `rgba(${ rgb.r },${ rgb.g },${ rgb.b },0)`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'kelvin':\n      const stops = [];\n      const min = props.minTemperature;\n      const max = props.maxTemperature;\n      const numStops = 8;\n      const range = max - min;\n      for (let kelvin = min, stop = 0; kelvin < max; kelvin += range / numStops, stop += 1) {\n        const { r, g, b } = IroColor.kelvinToRgb(kelvin);\n        stops.push([ 100 / numStops * stop, `rgb(${r},${g},${b})` ]);\n      }\n      return stops;\n    case 'hue':\n      return [\n        [0,      '#f00'],\n        [16.666, '#ff0'],\n        [33.333, '#0f0'],\n        [50,     '#0ff'],\n        [66.666, '#00f'],\n        [83.333, '#f0f'],\n        [100,    '#f00'],\n      ];\n    case 'saturation':\n      const noSat = IroColor.hsvToHsl({h: hsv.h, s: 0, v: hsv.v});\n      const fullSat = IroColor.hsvToHsl({h: hsv.h, s: 100, v: hsv.v});\n      return [\n        [0, `hsl(${noSat.h},${noSat.s}%,${noSat.l}%)`],\n        [100, `hsl(${fullSat.h},${fullSat.s}%,${fullSat.l}%)`]\n      ];\n    case 'value':\n    default:\n      const hsl = IroColor.hsvToHsl({h: hsv.h, s: hsv.s, v: 100});\n      return [\n        [0, '#000'],\n        [100, `hsl(${hsl.h},${hsl.s}%,${hsl.l}%)`]\n      ];\n  }\n}\n\n/**\n * @desc Get the gradient coords for a slider\n * @param props - slider props\n */\nexport function getSliderGradientCoords(props: Partial<SliderOptions>) {\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  return {\n    x1: '0%',\n    y1: ishorizontal ? '100%' : '0%',\n    x2: ishorizontal ? '0%' : '100%',\n    y2: '0%'\n  }\n}","import { IroColor } from './color';\nimport { SliderType } from './slider';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport interface InputOptions extends IroColorPickerOptions {\n  color: IroColor;\n  sliderType: SliderType;\n  minTemperature: number;\n  maxTemperature: number;\n}\n\n/**\n * @desc Clamp slider value between min and max values\n * @param type - props.sliderType\n * @param value - value to clamp\n */\n export function clampSliderValue(props: Partial<InputOptions>, value: number) {\n  function clamp(num: number, min: number, max: number) {\n    return Math.min(Math.max(num, min), max);\n  }\n  switch(props.sliderType) {\n    case 'hue':\n      return clamp(value, 0, 360);\n    case 'saturation':\n    case 'value':\n      return clamp(value, 0, 100);\n    case 'red':\n    case 'green':\n    case 'blue':\n      return clamp(value, 0, 255);\n    case 'alpha':\n      return clamp(value, 0, 1);\n    case 'kelvin': // TODO\n      const { minTemperature, maxTemperature } = props;\n      return clamp(value, minTemperature, maxTemperature);\n    }\n}\n\n/**\n * @desc Get the current slider value from input field input\n * @param props - slider props\n * @param e - KeyboardEvent\n */\nexport function getSliderValueFromInputField(props: Partial<InputOptions>, e: KeyboardEvent) {\n  // regex for digit or dot (.)\n  if (!/^([0-9]|\\.)$/i.test((e).key)) {\n    return 0;\n  }\n  let maxlen: number;\n  if (props.sliderType === 'alpha') {\n    maxlen = 4;\n  } else if (props.sliderType === 'kelvin') {\n    maxlen = 5;\n  } else {\n    maxlen = 3;\n  }\n\n  let target = (e.target as HTMLInputElement);\n  let valueString = target.value.toString();\n  if (target.selectionStart !== undefined) {\n    valueString = valueString.substring(0, target.selectionStart) +\n      e.key.toString() +\n      valueString.substring(target.selectionEnd);\n  } else {\n    valueString = valueString.length + 1 > maxlen ? valueString : valueString + e.key.toString();\n  }\n  const valueNum = +valueString;\n  return clampSliderValue(props, valueNum);\n}\n\n/**\n * @desc Get the current slider value from clipboard data\n * @param props - slider props\n * @param e - ClipboardEvent\n */\n export function getSliderValueFromClipboard(props: Partial<InputOptions>, e: ClipboardEvent) {\n  // allow only whole or decimal numbers\n  const r = /^[+]?([.]\\d+|\\d+([.]\\d+)?)$/i;\n  const valueString: string = e.clipboardData.getData('text');\n  if (!r.test(valueString)) {\n    return 0;\n  }\n  const valueNum = +valueString;\n  return clampSliderValue(props, valueNum);\n}","import { IroColorPickerOptions } from './colorPickerOptions';\nimport { IroColor, IroColorValue } from './color';\n\nexport interface WheelProps extends IroColorPickerOptions {\n  color: IroColor;\n}\n\nconst TAU = Math.PI * 2;\n\n// javascript's modulo operator doesn't produce positive numbers with negative input\n// https://dev.to/maurobringolf/a-neat-trick-to-compute-modulo-of-negative-numbers-111e\nconst mod = (a: number, n: number) => (a % n + n) % n;\n\n// distance between points (x, y) and (0, 0)\nconst dist = (x: number, y: number) => Math.sqrt(x * x + y * y);\n\n/**\n * @param props - wheel props\n * @internal\n */\nfunction getHandleRange(props: Partial<WheelProps>) {\n  return props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n}\n\n/**\n * Returns true if point (x, y) lands inside the wheel\n * @param props - wheel props\n * @param x \n * @param y \n */\nexport function isInputInsideWheel(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy } = getWheelDimensions(props);\n  const r = props.width / 2;\n  return dist(cx - x, cy - y) < r;\n}\n\n/**\n * @desc Get the point as the center of the wheel\n * @param props - wheel props\n */\nexport function getWheelDimensions(props: Partial<WheelProps>) {\n  const r = props.width / 2;\n  return {\n    width: props.width,\n    radius: r - props.borderWidth,\n    cx: r,\n    cy: r\n  };\n}\n\n/**\n * @desc Translate an angle according to wheelAngle and wheelDirection\n * @param props - wheel props\n * @param angle - input angle\n */\nexport function translateWheelAngle(props: Partial<WheelProps>, angle: number, invert?: boolean) {\n  const wheelAngle = props.wheelAngle;\n  const wheelDirection = props.wheelDirection\n  // inverted and clockwisee\n  if (invert && wheelDirection === 'clockwise')\n    angle = wheelAngle + angle;\n  // clockwise (input handling)\n  else if (wheelDirection === 'clockwise')\n    angle = (360 - wheelAngle) + angle;\n  // inverted and anticlockwise\n  else if (invert && wheelDirection === 'anticlockwise')\n    angle = (wheelAngle + 180) - angle;\n  // anticlockwise (input handling)\n  else if (wheelDirection === 'anticlockwise')\n    angle = wheelAngle - angle;\n  return mod(angle, 360);\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - wheel props\n * @param color\n */\nexport function getWheelHandlePosition(props: Partial<WheelProps>, color: IroColor) {\n  const hsv = color.hsv;\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = getHandleRange(props);\n  const handleAngle = (180 + translateWheelAngle(props, hsv.h, true)) * (TAU / 360);\n  const handleDist = (hsv.s / 100) * handleRange;\n  const direction = props.wheelDirection === 'clockwise' ? -1 : 1;\n  return {\n    x: cx + handleDist * Math.cos(handleAngle) * direction,\n    y: cy + handleDist * Math.sin(handleAngle) * direction,\n  }\n}\n\n/**\n * @desc Get the current wheel value from user input\n * @param props - wheel props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getWheelValueFromInput(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = getHandleRange(props);\n  x = cx - x;\n  y = cy - y;\n  // Calculate the hue by converting the angle to radians\n  const hue = translateWheelAngle(props, Math.atan2(-y, -x) * (360 / TAU));\n  // Find the point's distance from the center of the wheel\n  // This is used to show the saturation level\n  const handleDist = Math.min(dist(x, y), handleRange);\n  return {\n    h: Math.round(hue),\n    s: Math.round((100 / handleRange) * handleDist)\n  };\n}","import { IroColor } from './color';\nimport { CssGradientStops } from './css';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport interface BoxOptions extends IroColorPickerOptions {\n  color: IroColor;\n}\n\n/**\n * @desc Get the CSS styles for the box root element\n * @param props - box props\n */\nexport function getBoxStyles(props: Partial<BoxOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the box\n * @param props - box props\n */\nexport function getBoxDimensions(props: Partial<BoxOptions>) {\n  const { width, boxHeight, padding, handleRadius } = props;\n  return {\n    width: width,\n    height: boxHeight ?? width,\n    radius: padding + handleRadius\n  };\n}\n\n/**\n * @desc Get the current box value from user input\n * @param props - box props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getBoxValueFromInput(props: Partial<BoxOptions>, x: number, y: number) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  const percentX = ((x - handleStart) / handleRangeX) * 100;\n  const percentY = ((y - handleStart) / handleRangeY) * 100;\n  return {\n    s: Math.max(0, Math.min(percentX, 100)),\n    v: Math.max(0, Math.min(100 - percentY, 100))\n  }\n}\n\n/**\n * @desc Get the current box handle position for a given color\n * @param props - box props\n * @param color\n */\nexport function getBoxHandlePosition(props: Partial<BoxOptions>, color: IroColor) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const hsv = color.hsv;\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  return { \n    x: handleStart + (hsv.s / 100) * handleRangeX,\n    y: handleStart + (handleRangeY - ((hsv.v / 100) * handleRangeY))\n  }\n}\n\n/**\n * @desc Get the gradient stops for a box\n * @param props - box props\n * @param color\n */\nexport function getBoxGradients(props: Partial<BoxOptions>, color: IroColor): CssGradientStops[] {\n  const hue = color.hue;\n  return [\n    // saturation gradient\n    [\n      [0, '#fff'],\n      [100, `hsl(${hue},100%,50%)`],\n    ],\n    // lightness gradient\n    [\n      [0, 'rgba(0,0,0,0)'],\n      [100, '#000'],\n    ]\n  ];\n}","import { IroColorPickerOptions } from './colorPickerOptions';\n\n// Keep track of html <base> elements for resolveSvgUrl\n// getElementsByTagName returns a live HTMLCollection, which stays in sync with the DOM tree\n// So it only needs to be called once\nlet BASE_ELEMENTS:  HTMLCollectionOf<HTMLBaseElement> | undefined;\n\n/**\n * @desc Resolve an SVG reference URL\n * This is required to work around how Safari and iOS webviews handle gradient URLS under certain conditions\n * If a page is using a client-side routing library which makes use of the HTML <base> tag, \n * Safari won't be able to render SVG gradients properly (as they are referenced by URLs)\n * More info on the problem: \n * https://stackoverflow.com/questions/19742805/angular-and-svg-filters/19753427#19753427\n * https://github.com/jaames/iro.js/issues/18\n * https://github.com/jaames/iro.js/issues/45\n * https://github.com/jaames/iro.js/pull/89\n * @props url - SVG reference URL\n */\nexport function resolveSvgUrl(url: string) {\n  if (!BASE_ELEMENTS)\n    BASE_ELEMENTS = document.getElementsByTagName('base');\n  // Sniff useragent string to check if the user is running Safari\n  const ua = window.navigator.userAgent;\n  const isSafari = /^((?!chrome|android).)*safari/i.test(ua);\n  const isIos = /iPhone|iPod|iPad/i.test(ua);\n  const location = window.location;\n  return ((isSafari || isIos) && (BASE_ELEMENTS.length > 0)) ? `${location.protocol}//${location.host}${location.pathname}${location.search}${url}` : url;\n}\n\n/**\n * @desc Get the path commands to draw an svg arc\n * @props cx - arc center point x\n * @props cy - arc center point y\n * @props radius - arc radius\n * @props startAngle - arc start angle\n * @props endAngle - arc end angle\n */\nexport function getSvgArcPath(cx: number, cy: number, radius: number, startAngle: number, endAngle: number) {\n  const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n  startAngle *= Math.PI / 180;\n  endAngle *= Math.PI / 180;\n  const x1 = cx + radius * Math.cos(endAngle);\n  const y1 = cy + radius * Math.sin(endAngle);\n  const x2 = cx + radius * Math.cos(startAngle);\n  const y2 = cy + radius * Math.sin(startAngle);\n  return `M ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 0 ${x2} ${y2}`;\n}\n\n/**\n * @desc Given a specifc (x, y) position, test if there's a handle there and return its index, else return null.\n *       This is used for components like the box and wheel which support multiple handles when multicolor is active\n * @props x - point x position\n * @props y - point y position\n * @props handlePositions - array of {x, y} coords for each handle\n */\nexport function getHandleAtPoint(props: Partial<IroColorPickerOptions>, x: number, y: number, handlePositions: {x: number, y: number}[]) {\n  for (let i = 0; i < handlePositions.length; i++) {\n    const dX = handlePositions[i].x - x;\n    const dY = handlePositions[i].y - y;\n    const dist = Math.sqrt(dX * dX + dY * dY);\n    if (dist < props.handleRadius) {\n      return i;\n    }\n  }\n  return null;\n}","import { IroColorPickerOptions } from './colorPickerOptions';\n\nexport function cssBorderStyles(props: IroColorPickerOptions) {\n  return {\n    boxSizing: 'border-box',\n    border: `${ props.borderWidth }px solid ${ props.borderColor }`\n  };\n}\n\nexport type CssGradientType = 'linear' | 'radial' | 'conical';\nexport type CssGradientStops = [number, number | string][];\n\nexport function cssGradient(type: CssGradientType, direction: string, stops: CssGradientStops) {\n  return `${ type }-gradient(${ direction }, ${ stops.map(([o, col]) => `${ col } ${ o }%`).join(',') })`;\n}\n\nexport function cssValue(value: number | string) {\n  if (typeof(value) === 'string')\n    return value;\n  return `${ value }px`;\n}","import { IroColor, IroColorValue } from './color';\n\nexport type LayoutDirection = 'vertical' | 'horizontal' | '';\n\nexport type WheelDirection = 'clockwise' | 'anticlockwise' | '';\n\nexport interface IroColorPickerOptions {\n  width?: number;\n  height?: number;\n  color?: IroColorValue;\n  colors?: IroColorValue[];\n  padding?: number;\n  layoutDirection?: LayoutDirection;\n  borderColor?: string;\n  borderWidth?: number;\n  handleRadius?: number;\n  activeHandleRadius?: number;\n  handleSvg?: string;\n  handleProps?: any;\n  wheelLightness?: boolean;\n  wheelAngle?: number;\n  wheelDirection?: WheelDirection;\n  sliderSize?: number;\n  sliderMargin?: number;\n  boxHeight?: number;\n}\n\nexport const iroColorPickerOptionDefaults: IroColorPickerOptions = {\n  width: 300,\n  height: 300,\n  color: '#fff',\n  colors: [],\n  padding: 6,\n  layoutDirection: 'vertical',\n  borderColor: '#fff',\n  borderWidth: 0,\n  handleRadius: 8,\n  activeHandleRadius: null,\n  handleSvg: null,\n  handleProps: {x: 0, y: 0},\n  wheelLightness: true,\n  wheelAngle: 0,\n  wheelDirection: 'anticlockwise',\n  sliderSize: null,\n  sliderMargin: 12,\n  boxHeight: null\n}"],"names":["CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH_3","PERMISSIVE_MATCH_4","REGEX_FUNCTIONAL_RGB","RegExp","REGEX_FUNCTIONAL_RGBA","REGEX_FUNCTIONAL_HSL","REGEX_FUNCTIONAL_HSLA","HEX_START","HEX_INT_SINGLE","HEX_INT_DOUBLE","REGEX_HEX_3","REGEX_HEX_4","REGEX_HEX_6","REGEX_HEX_8","KELVIN_MIN","KELVIN_MAX","log","Math","round","floor","clamp","num","min","max","parseUnit","str","isPercentage","indexOf","parseFloat","parseHexInt","parseInt","intToHex","int","toString","padStart","IroColor","value","onChange","$","h","s","v","a","set","initialValue","test","hexString","rgbString","hslString","hsva","rgb","hsv","hsl","kelvin","Error","setChannel","format","channel","reset","clone","unbind","undefined","hsvToRgb","i","f","p","q","t","mod","r","g","b","rgbToHsv","delta","hue","saturation","hsvToHsl","l","divisor","hslToHsv","kelvinToRgb","temp","rgbToKelvin","eps","minTemp","maxTemp","newValue","oldValue","changes","key","res","_kelvin","alpha","match","exec","rgba","hsla","sliderDefaultOptions","sliderShape","sliderType","minTemperature","maxTemperature","getSliderStyles","props","layoutDirection","sliderMargin","getSliderDimensions","width","sliderSize","borderWidth","handleRadius","padding","length","showInput","sliderLength","ishorizontal","handleStart","handleRange","height","cx","cy","radius","x","y","getCurrentSliderValue","color","temperatureRange","percent","getSliderValueFromInput","handlePos","getSliderHandlePosition","sliderValue","midPoint","getSliderGradient","stops","numStops","range","stop","push","noSat","fullSat","getSliderGradientCoords","x1","y1","x2","y2","clampSliderValue","getSliderValueFromInputField","e","maxlen","target","valueString","selectionStart","substring","selectionEnd","valueNum","getSliderValueFromClipboard","clipboardData","getData","TAU","PI","n","dist","sqrt","getHandleRange","isInputInsideWheel","getWheelDimensions","translateWheelAngle","angle","invert","wheelAngle","wheelDirection","getWheelHandlePosition","handleAngle","handleDist","direction","cos","sin","getWheelValueFromInput","atan2","getBoxStyles","getBoxDimensions","boxHeight","getBoxValueFromInput","handleRangeX","handleRangeY","percentX","percentY","getBoxHandlePosition","getBoxGradients","BASE_ELEMENTS","resolveSvgUrl","url","document","getElementsByTagName","ua","window","navigator","userAgent","isSafari","isIos","location","protocol","host","pathname","search","getSvgArcPath","startAngle","endAngle","largeArcFlag","getHandleAtPoint","handlePositions","dX","dY","cssBorderStyles","boxSizing","border","borderColor","cssGradient","type","map","o","col","join","cssValue","iroColorPickerOptionDefaults","colors","activeHandleRadius","handleSvg","handleProps","wheelLightness"],"mappings":"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"}